stack
    자신이 어디가 bottom인지 설계하기 나름


중위표기법

    피연산자 사이에 연산자를 표현하는 방법
        인간이 사용하는 방법이며 이해가 쉽지만, 연산자의 우선순위를 직접 판단해야 한다.
        인간의 직관이 계입되어야 한다
    
후위표기법

    피연산자 뒤쪽에 연산자를 표현하는 방법
        이해가 어렵지만 연산자의 우선순위를 계산할 필요가 없다는 장점이 있다.
        
    사용법
        연산자가 나왔을 떄 앞에 있는 두 숫자를 연산자를 사용해 계산한다

    
        * 숫자가 나오면 res에 저장
        * 연산자는 stack에 저장
            우선순위가 낮은 연산자가 stack에 존재하면 넣어준다
            같은 우선순위가 있으면 stack에 있는 연산자를 res에 넣어준다
                우선순위가 같거나 먼저이면 res에 넣어준다

    계산방법
        stack에서 
            1. 숫자가 나오면 push
            2. 연산자가 나오면 pop을 두번 후 연산자와 계산 후 push

        '\0'까지 오면 stack에 있는 숫자를 return 한다