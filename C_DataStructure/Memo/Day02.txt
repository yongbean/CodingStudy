구조체
    하나 이상의 변수를 묶어서 만드는 새로운 유형의 자료형

학생
    kor = 10
    eng = 20
    math = 30

배열 ==> only single type is possible
scores ={10, 20, 30}

구조체 정의
    struct 구조체명 {
        변수;
        변수;
        ...
    }

 구조체 별명 설정
            typedef struct 구조체명 {
                변수;
            }별명;
            
            typedef struct {
                변수;
            }별명;

구조체 변수 선언
            struct 구조체명 구조체변수명;
            별명 구조체변수명;


구조체 변수 선언과 동시에 초기화
            멤버 변수 순서를 맞춰줘야한다
            struct 구조체 구조체변수명 = {값, 값, ...};
            별명 구조체변수명 = {값, 값, ...};

멤버변수에 접근하기
            하위 연산자 . 을 활용한다 (~안에있는)
            구조체변수명.멤버변수명
        
구조체 배열
            구조체변수를 요소로 담고있는 배열

            별명 배열[] = {구조체변수, 구조체변수,...};

구조체 포인터
            구조체변수의 주소값을 저장하는 포인터

            별명* 포인터 = 구조체변수의주소값;

구조체 포인터로 멤버변수 접근하기
            (*포인터).멤버변수
            포인터->멤버변수

------------------------------------------------------------

메모리의 동적 할당
            프로그래머가 프로그램이 실행 되는 동안 사용할 메모리 공간을 할당하고, 해제하는 것을 의미한다
            메모리 효율성을 높일 수 있다
            Heap 영역에 할당이 된다

정적 할당
            프로그램에서 메모리를 할당해주고 {}이 끝나면 메모리를 해제해주는 방식으로 코딩이 되어있다

stack
    지역변수
    생성 주기가 정해져있다
    {} 끝나면 안에 있던 내용은 사라진다

Heap
    변수를 프로그래머가 지정해주면 heap 영역에 저장됨으로 유저의 사용도의 따라 언제든지 없엘 수 있다


malloc() : 동적할당을 시켜주는 함수,
           할당된 위치(주소)를 return 한다.
           (return 타입이 포인터이다)

calloc() : 동적할당을 시켜주는 함수,
           할당된 위치(주소)를 return 한다
           초기화를 해준다

free(해제시킬주소)
        해당 위치를 메모리에서 해제시킨다



malloc(sizeof(자료형) * 크기)
calloc(크기, sizeof(자료형))

_______--------------____________--------------______________---------------____________----


자료구조
        리스트

선형자료구조
        앞 뒤의 관계가 1:1인 자료구조

리스트 
        추가, 삭제, 검색, 수정이 자유로운 자료구조