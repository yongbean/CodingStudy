정적 멤버 변수, 정적 멤버 함수, const => 가상 함수

가상 함수 -> Ghost 함수



//class12.cpp
정적 멤버 함수는 어떤 경우에 사용?
--> 정적 멤버 데이터 사용
----> 특정한 객체의 공통적인 데이터를 처리할 때 사용한다

정적함수는 클래스 객체가 필요없다

정적 멤버 데이터와 함께 사용되면서 공통된 데이터를 처리할 때 사용한다

정적 사용한 이유

    static이 우선순위를 가진다

즉 이 코딩에서는 한번 로그인 한 뒤 다시 안해도 된다
    r1, r2, r3는 한명의 유저이지만 유저가 사용하려는 버튼을 하나 누른뒤
    로그인을 하면 다른 버튼을 눌렀을 때 다시 로그인을 안해도 된다

//class13.cpp
const : 변수를 const로 선언한 경우 더 이상 변수에 대입을 통해서 값을 변경 할 수 없다.
        변수가 클래스 객체이면 객체의 멤버를 변경 시킬 수 없다
        const가 한정된 클래스 객체에 멤버 함수를 통해 멤버의 값을 변경 시도 할시에는?

        멤버 함수도 호출 불가
c++에서는 const 멤버 함수를 제공해준다

//class14.cpp

const 객체는 오직const 멤버 함수만을 호출 할 수 있다.
일반 객체는 모든 멤버 함수를 호출 할 수 있다.

//class15.cpp

const 멤버 함수에서 멤버의 값을 변경하려고 한다면

void CFunc1() const // const 멤버 함수 

//class16.cpp

모든 것이 같은 함수여도 const가 붙으면 다른 함수로 인식이 된다.

//class17.cpp

생성자

1. 객체 생성 (초기화)
2. 멤버 필드 초기화

    생성자는 함수이다.
        반환 타입이 없다.

    한 프로그램안에서 생성자는 인자를 다르게 하여 중복 정의 할 수 있다.
    **** 소멸자는 프로그램 안에서 단 하나만 존재

    class Name : CTest
    생성자 이름 : CTest()
    소멸자의 이름 : ~CTest()



//class2-2.cpp

소멸자와 생성자가 default로 생긴다

//class3-3.cpp

default생성자를 직접 생성할 때 함수()와 함수(변수)를 둘 다 만들어줘야 한다
    함수(변수)만 만들고 함수()를 호출하면 에러가 발생


//class4-4.cpp
상속관계
    생성자: 자식 클래스에서 생성자 호출시 부모 클래스에 있는 생성자를 호출한 뒤 자식 생성자 호출
    소멸자: 자식 소멸자를 먼저 실행 후 부모 클래스 소멸자 호출

//class5-5.cpp

//class6-6.cpp

i의 값을 변수에다가 값 복사 후 대입

    --> 복사 생성

    복사 생성자 구분 방법
    CTest(const CTest& obj)